basePath: /
definitions:
  appModel.Item:
    properties:
      created_at:
        type: string
      id:
        type: string
      itemCode:
        type: integer
      listId:
        type: string
    type: object
  appModel.List:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      userId:
        type: integer
    type: object
  appModel.ListWithTeams:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      teams:
        items:
          $ref: '#/definitions/appModel.Team'
        type: array
      userId:
        type: integer
    type: object
  appModel.NewItem:
    properties:
      itemCode:
        type: integer
      listId:
        type: string
    type: object
  appModel.NewList:
    properties:
      name:
        type: string
    type: object
  appModel.Team:
    properties:
      crest:
        type: string
      id:
        type: string
      name:
        type: string
      teamId:
        type: integer
    type: object
  commonModels.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  commonModels.OkResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: s.heidar@jabama.com
    name: API Support
  description: This is a sample hexagonal domain driven for golang.
  title: Jabama Wishes
  version: "1.0"
paths:
  /item:
    post:
      consumes:
        - application/json
      description: Add a new item to list
      parameters:
        - description: Item object to Add
          in: body
          name: list
          required: true
          schema:
            $ref: '#/definitions/appModel.NewItem'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/appModel.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
      security:
        - BearerAuth: [ ]
      summary: Add a new item to list
      tags:
        - Item
  /item/{id}:
    delete:
      description: remove Item from the list by ID
      parameters:
        - description: Item ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commonModels.OkResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
      security:
        - BearerAuth: [ ]
      summary: remove Item from the list by ID
      tags:
        - Item
  /list:
    get:
      description: Get all lists
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/appModel.List'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
      security:
        - BearerAuth: [ ]
      summary: Get all lists
      tags:
        - List
    post:
      consumes:
        - application/json
      description: Create a new list with the specified name
      parameters:
        - description: List object to create
          in: body
          name: list
          required: true
          schema:
            $ref: '#/definitions/appModel.NewList'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/appModel.List'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
      security:
        - BearerAuth: [ ]
      summary: Create a new list
      tags:
        - List
  /list/{id}:
    delete:
      description: delete a list using the provided ID
      parameters:
        - description: List ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commonModels.OkResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
      security:
        - BearerAuth: [ ]
      summary: delete list by ID
      tags:
        - List
    get:
      description: Get a list using the provided ID
      parameters:
        - description: List ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/appModel.ListWithTeams'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
      security:
        - BearerAuth: [ ]
      summary: Get list by ID
      tags:
        - List
    put:
      description: update a list using the provided ID
      parameters:
        - description: List ID
          in: path
          name: id
          required: true
          type: string
        - description: List object to update
          in: body
          name: list
          required: true
          schema:
            $ref: '#/definitions/appModel.NewList'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/appModel.List'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
      security:
        - BearerAuth: [ ]
      summary: update list by ID
      tags:
        - List
  /team/{id}:
    get:
      description: Get a team using the provided ID
      parameters:
        - description: Team ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/appModel.Team'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/commonModels.ErrorResponse'
      security:
        - BearerAuth: [ ]
      summary: Get team by ID
      tags:
        - Team
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
